namespace LogicGame;

/// <summary>
/// Hints are shown on the main page, and generated by the app code.
/// </summary>
public class Hint
{
    /// <summary>
    /// Only 4 hint types are implemented.
    /// </summary>
    public HintType Type { get; set; }
    
    /// <summary>
    /// The text displayed on the page
    /// </summary>
    public string HintText { get; set; } = string.Empty;

    /// <summary>
    /// All of the cells involved in this hint
    /// </summary>
    public List<Cell> Cells { get; set; } = new List<Cell>();

    /// <summary>
    /// A courtesy to let the user check off hints already processed.
    /// </summary>
    public bool Checked { get; set; } = false;

    /// <summary>
    /// This is important. We don't want to create multiple hints
    /// of the same type involving the same cells.
    /// It's called from GenerateSameColumnClue() using LINQ
    /// </summary>
    /// <param name="cells"></param>
    /// <returns>returns true if the cells involved are already
    /// being used.</returns>
    public bool ContainsCells(List<Cell> cells)
    {
        int matchCount = 0;
        foreach (var cell in cells)
        {
            var match = (from x in Cells 
                         where x.Name == cell.Name 
                         select x).FirstOrDefault();
            if (match != null)
                matchCount++;
        }
        return (matchCount == cells.Count);
    }
}
